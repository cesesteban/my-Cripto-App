{"version":3,"sources":["components/Nav.js","components/Utils.js","store/action.js","components/Chart.js","components/ChartSelector.js","components/Charts.js","components/HeaderStart.js","components/Home.js","components/Row.js","components/List.js","components/CriptoTable.js","components/Chart2.js","components/ChartSelector2.js","components/SpecificChart.js","App.js","serviceWorker.js","store/reducer.js","store/store.js","index.js"],"names":["Nav","className","style","marginRight","color","to","name","BTC","ETH","BNB","LTC","XRP","LINK","UNI","ADA","EOS","VET","TRX","XLM","THETA","FIL","CRO","BCH","DAI","USDT","USDC","criptoArray","key","push","getDataCripto","cripto","dispatch","URLDate","axios","get","then","res","type","payload","data","Data","catch","err","position","display","justifyContent","margin","Chart","criptoName","timeSelect","useDispatch","dataCriptoDetail","useSelector","state","labels","datasets","label","borderColor","backgroundColor","options","title","text","useEffect","i","moment","subtract","calendar","close","role","colortext","ChartSelector","submitTime","submitCripto","scope","onChange","e","target","value","map","Charts","useState","setCripto","time","setTime","flexDirection","background","backgroundImage","height","backgroundfx","HeaderStart","Home","Row","nameCripto","FROMSYMBOL","pathname","aboutProps","nCripto","PRICE","OPENDAY","HIGH24HOUR","LOW24HOUR","MKTCAP","CHANGE24HOUR","List","dataCripto","criptoDetail","interval","setInterval","URL","join","DISPLAY","getCripto","clearInterval","border","USD","CriptoTable","Chart2","ChartSelector2","nameName","SpecificChart","location","nameCriptoName","undefined","App","Fragment","exact","path","component","Boolean","window","hostname","match","initialState","rootReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"yLAiBeA,MAbf,WACI,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,mBACP,kBAAC,IAAD,CAASC,MAAO,CAAEC,YAAa,OAAQC,MAAO,SAAWC,GAAG,uBAA5D,QACA,kBAAC,IAAD,CAASH,MAAO,CAAEC,YAAa,OAAQC,MAAO,SAAWC,GAAG,yBAA5D,c,kDCVXC,EAAO,CAChBC,IAAK,UACLC,IAAK,WACLC,IAAK,UACLC,IAAK,OACLC,IAAK,SACLC,KAAM,OACNC,IAAK,WACLC,IAAK,UACLC,IAAK,MACLC,IAAK,UACLC,IAAK,OACLC,IAAK,UACLC,MAAO,QACPC,IAAK,WACLC,IAAK,SACLC,IAAK,eACLC,IAAK,MACLC,KAAM,SACNC,KAAM,YAGGC,EAAc,GAE3B,IAAK,IAAIC,KAAOrB,EACZoB,EAAYE,KAAKD,GCtBd,IAeME,EAAgB,SAACC,GAAD,OAAY,SAAAC,GACrC,IAAIC,EAAO,kEAA8DF,EAA9D,uBACXG,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GACFL,EAAS,CAAEM,KAAM,kBAAmBC,QAASF,EAAIG,KAAKC,KAAKA,UAC5DC,OAAM,SAAAC,GACLX,EAAS,CAAEM,KAAM,kBAAmBC,QAASI,EAAIN,WClBvDO,EAAW,CACbC,QAAS,OACTC,eAAgB,SAChBC,OAAQ,QAqDGC,MAlDf,YAA0C,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAElBlB,EAAWmB,cACXC,EAAmBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,oBAE9CZ,EAAO,CACTe,OAAQ,CAAC,IACTC,SAAU,CACN,CACIC,MAAOR,EACPT,KAAM,GACNkB,YAAa,CAAC,WACdC,gBAAiB,CAAC,cAIxBC,EAAU,CACZC,MAAO,CACHhB,SAAS,EACTiB,KAAMb,IASd,GALAc,qBAAU,WACN/B,EAASF,EAAcmB,MACxB,CAACA,EAAYjB,IAGZoB,GAAoBA,EAAiB,GACrC,IAAK,IAAIY,EAAId,EAAYc,GAAK,EAAGA,IAC7BxB,EAAKe,OAAO1B,KAAKoC,MAASC,SAASF,EAAG,QAAQG,SAAS,IACvD3B,EAAKgB,SAAS,GAAGhB,KAAKX,KAAKuB,EAAiB,IAAMY,GAAGI,OAI7D,OACMhB,EAMC,yBAAKlD,UAAU,MAAMC,MAAOyC,GAC3B,yBAAK1C,UAAU,aACX,kBAAC,OAAD,CAAMsC,KAAMA,EAAMoB,QAASA,MAP/B,yBAAK1D,UAAU,iCACX,yBAAKA,UAAU,qBAAqBmE,KAAK,UACrC,0BAAMnE,UAAU,WAAhB,iBChDd0C,EAAW,CACbC,QAAS,OACTC,eAAgB,iBAEdzC,EAAQ,CACVsD,gBAAgB,UAChBD,YAAa,WAEXY,EAAY,CACdjE,MAAM,WAoCKkE,MAjCf,YAAoD,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aAChC,OACI,6BACI,2BAAOvE,UAAU,SACb,2BAAOA,UAAU,SACb,4BACI,wBAAKC,MAASyC,EAAU8B,MAAM,OAE1B,4BAAQvE,MAAOE,EAAOsE,SAAU,SAAAC,GAAC,OAAIH,EAAaG,EAAEC,OAAOC,SACtDnD,EAAY,IAAMA,EAAYoD,KAAI,SAAAhD,GAAM,OAAI,4BAAQH,IAAKG,EAC1D+C,MAAO/C,GACFxB,EAAKwB,QAId,2BAAO5B,MAASmE,GAAhB,oBAGA,4BAAQnE,MAAOE,EAAOsE,SAAU,SAAAC,GAAC,OAAEJ,EAAWI,EAAEC,OAAOC,SACnD,4BAAQA,MAAO,KAAf,SACA,4BAAQA,MAAO,IAAf,aACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,GAAf,kBCZjBE,MApBf,WAEI,IAFc,EAIcC,mBAAS,OAJvB,mBAIPlD,EAJO,KAICmD,EAJD,OAKUD,mBAHL,KAFL,mBAKPE,EALO,KAKDC,EALC,KAOd,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAeX,aAAcS,EAAWV,WAAYY,IACpD,yBAAKjF,MAAO,CAAE0C,QAAS,OAAQC,eAAgB,eAAgBuC,cAAe,WAC1E,6BACI,kBAAC,EAAD,CAAOpC,WAAYlB,EAAQmB,WAAYiC,QCfrDG,EAAa,CACfC,gBAAgB,0EAChBC,OAAQ,SAENC,EAAe,CACjB9B,gBAAiB,mBAuBN+B,MApBf,WACI,OACI,6BACI,yBAAKxF,UAAU,2BAA4BC,MAAOmF,GAC9C,yBAAKpF,UAAU,OAAQC,MAAOsF,GAC1B,yBAAKvF,UAAU,0DACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,QAAd,aACA,wBAAIA,UAAU,QAAd,+BACA,kBAAC,IAAD,CAAMI,GAAG,uBACT,4BAAQJ,UAAU,gCAAlB,iBCVbyF,MARf,WACI,OACI,6BACI,kBAAC,EAAD,Q,aC8BGC,MA/Bf,YAA2C,IAA5B7D,EAA2B,EAA3BA,OAAQxB,EAAmB,EAAnBA,KAAMsF,EAAa,EAAbA,WACzB,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAInB,MAAM,OAAO3C,EAAO+D,YACxB,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMxF,GAAI,CAACyF,SAAU,uBAAwBC,WAAY,CAACC,QAAS,CAACJ,aAAYtF,WAC3EA,IAGT,kBAAC,KAAD,KACKwB,EAAOmE,OAEZ,kBAAC,KAAD,KACKnE,EAAOoE,SAEZ,kBAAC,KAAD,KACKpE,EAAOqE,YAEZ,kBAAC,KAAD,KACKrE,EAAOsE,WAEZ,kBAAC,KAAD,KACKtE,EAAOuE,QAEZ,kBAAC,KAAD,KACKvE,EAAOwE,gBC4BRC,MAlDhB,WAEI,IAAMxE,EAAWmB,cACXsD,EAAapD,aAAY,SAAAC,GAAK,OAAIA,EAAMoD,gBAO9C,OALA3C,qBAAU,WACN,IAAM4C,EAAWC,aAAY,kBAAM5E,EPNlB,eAACD,EAAD,uDAAUJ,EAAV,OAA0B,SAAAK,GAC/C,IAAI6E,EAAG,sEAAkE9E,EAAO+E,KAAK,KAA9E,cACP5E,IAAMC,IAAI0E,GACLzE,MAAK,SAAAC,GACFL,EAAS,CAAEM,KAAM,aAAcC,QAASF,EAAIG,KAAKuE,aAClDrE,OAAM,SAAAC,GACLX,EAAS,CAAEM,KAAM,aAAcC,QAASI,EAAIN,UOAJ2E,MAAc,MAC1D,OAAO,kBAAMC,cAAcN,MAC5B,CAAC3E,IAGA,6BACI,6BACOyE,EAMCA,IAAeA,EAAW9E,EAAY,IACtC,yBAAKzB,UAAU,iCACX,yBAAKA,UAAU,qBAAqBmE,KAAK,UACrC,0BAAMnE,UAAU,WAAhB,gBAIR,kBAAC,QAAD,CAAOA,UAAU,QAAQC,MAAO,CAAE+G,OAAQ,mBACtC,kBAAC,QAAD,CAAOhH,UAAU,SACb,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAIwE,MAAM,OAAV,UACA,kBAAC,KAAD,CAAIA,MAAM,OAAV,QACA,kBAAC,KAAD,CAAIA,MAAM,OAAV,SACA,kBAAC,KAAD,CAAIA,MAAM,OAAV,WACA,kBAAC,KAAD,CAAIA,MAAM,OAAV,gBACA,kBAAC,KAAD,CAAIA,MAAM,OAAV,eACA,kBAAC,KAAD,CAAIA,MAAM,OAAV,aACA,kBAAC,KAAD,CAAIA,MAAM,OAAV,aAGR,kBAAC,QAAD,KACK+B,GAAcA,EAAW9E,EAAY,KAAOA,EAAYoD,KAAI,SAAAhD,GAAM,OAC/D,kBAAC,EAAD,CAAKH,IAAKG,EAAQxB,KAAMA,EAAKwB,GAASA,OAAQ0E,EAAW1E,GAAQoF,IAAKtB,WAAY9D,SA3B9F,yBAAK7B,UAAU,iCACX,yBAAKA,UAAU,qBAAqBmE,KAAK,UACrC,0BAAMnE,UAAU,WAAhB,mBCRbkH,MAZf,WAEI,OACI,6BACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,SCJVxE,EAAW,CACbC,QAAS,OACTC,eAAgB,SAChBC,OAAQ,QAsDGsE,MAlDf,YAA4C,IAA3BpE,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAEnBlB,EAAWmB,cACXC,EAAmBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,oBAE9CZ,EAAO,CACTe,OAAQ,CAAC,IACTC,SAAU,CACN,CACIC,MAAOR,EACPT,KAAM,GACNkB,YAAa,CAAC,WACdC,gBAAiB,CAAC,cAIxBC,EAAU,CACZC,MAAO,CACHhB,SAAS,EACTiB,KAAMb,IASd,GALAc,qBAAU,WACN/B,EAASF,EAAcmB,MACxB,CAACA,EAAYjB,IAGZoB,GAAoBA,EAAiB,GACrC,IAAK,IAAIY,EAAId,EAAYc,GAAK,EAAGA,IAC7BxB,EAAKe,OAAO1B,KAAKoC,MAASC,SAASF,EAAG,QAAQG,SAAS,IACvD3B,EAAKgB,SAAS,GAAGhB,KAAKX,KAAKuB,EAAiB,IAAMY,GAAGI,OAI7D,OACMhB,EAMC,yBAAKlD,UAAU,MAAMC,MAAOyC,GAC3B,yBAAK1C,UAAU,aACX,kBAAC,OAAD,CAAMsC,KAAMA,EAAMoB,QAASA,MAP/B,yBAAK1D,UAAU,iCACX,yBAAKA,UAAU,qBAAqBmE,KAAK,UACrC,0BAAMnE,UAAU,WAAhB,iBClDd0C,EAAW,CACbC,QAAS,OACTC,eAAgB,iBAEdzC,EAAQ,CACVsD,gBAAgB,UAChBD,YAAa,WAEXY,EAAY,CACdjE,MAAM,WAiCKiH,MA9Bf,YAAiD,IAAxB9C,EAAuB,EAAvBA,WAAY+C,EAAW,EAAXA,SAEjC,OACI,6BACI,2BAAOrH,UAAU,SACb,2BAAOA,UAAU,SACb,4BACI,wBAAKC,MAASyC,EAAS8B,MAAM,OAEzB,4BAAQvE,MAAOE,GACVkH,GAEL,2BAAOpH,MAASmE,GAAhB,oBAGA,4BAAQnE,MAAOE,EAAOsE,SAAU,SAAAC,GAAC,OAAEJ,EAAWI,EAAEC,OAAOC,SACnD,4BAAQA,MAAO,KAAf,SACA,4BAAQA,MAAO,IAAf,aACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,GAAf,kBCKjB0C,MAjCf,YAAoC,IAAZC,EAAW,EAAXA,SAGhBxE,EAAa,MACbyE,EAAiB,eAEOC,IAAxBF,EAASzB,iBAC2B2B,IAAhCF,EAASzB,WAAWC,UACpBhD,EAAcwE,EAASzB,WAAWC,QAAQJ,iBAGtB8B,IAAxBF,EAASzB,iBAC2B2B,IAAhCF,EAASzB,WAAWC,UACpByB,EAAkBD,EAASzB,WAAWC,QAAQ1F,MAbvB,MAiBd0E,mBAAShC,GAAnBlB,EAjBwB,sBAkBPkD,mBAhBL,KAFY,mBAkBxBE,EAlBwB,KAkBlBC,EAlBkB,KAoB/B,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBZ,WAAYY,EAASmC,SAAUG,IAC/C,yBAAKvH,MAAO,CAAE0C,QAAS,OAAQC,eAAgB,eAAgBuC,cAAe,WAC1E,6BACI,kBAAC,EAAD,CAAQpC,WAAYlB,EAAQmB,WAAYiC,QCZ7CyC,MAXf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWrC,IAC/C,kBAAC,IAAD,CAAOoC,KAAK,sBAAsBC,UAAWZ,IAC7C,kBAAC,IAAD,CAAOW,KAAK,wBAAwBC,UAAWhD,IAC/C,kBAAC,IAAD,CAAO+C,KAAK,uBAAuBC,UAAWR,MCFhCS,QACW,cAA7BC,OAAOT,SAASU,UAEe,UAA7BD,OAAOT,SAASU,UAEhBD,OAAOT,SAASU,SAASC,MACvB,2D,YCfAC,EAAe,CACnB3B,aAAc,GACdtD,iBAAkB,IAkBLkF,MAff,WAAoD,IAA/BhF,EAA8B,uDAAtB+E,EAAcE,EAAQ,uCACjD,OAAQA,EAAOjG,MACb,IdPsB,acQpB,MAAO,CACLoE,aAAc6B,EAAOhG,SAEzB,IdV2B,kBcWzB,MAAO,CACLa,iBAAkBmF,EAAOhG,SAE7B,QACE,OAAOe,I,QCVEkF,EALDC,YACVH,EACAI,YAAgBC,MCEpBC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJM,SAASC,eAAe,SHqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9G,MAAK,SAAA+G,GACJA,EAAaC,gBAEd1G,OAAM,SAAA2G,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.d4448afc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div className='nav-black'>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                        <NavLink style={{ marginRight: '20px', color: 'white' }} to='/my-crypto-app/Home'>Home</NavLink>\r\n                        <NavLink style={{ marginRight: '20px', color: 'white' }} to=\"/my-crypto-app/Charts\" >Charts</NavLink>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","export const name = {\r\n    BTC: \"Bitcoin\",\r\n    ETH: \"Ethereum\",\r\n    BNB: 'Binance',\r\n    LTC: 'LITE',\r\n    XRP: 'Ripple',\r\n    LINK: 'LINK',\r\n    UNI: 'Uni-Coin',\r\n    ADA: 'Cardano',\r\n    EOS: 'EOS',\r\n    VET: 'VeChain',\r\n    TRX: 'Tron',\r\n    XLM: 'Stellar',\r\n    THETA: 'Theta',\r\n    FIL: 'FileCoin',\r\n    CRO: 'Crypto',\r\n    BCH: 'Bitcoin-Cash',\r\n    DAI: 'Dai',\r\n    USDT: 'Tether',\r\n    USDC: 'USD-Coin'\r\n}\r\n\r\nexport const criptoArray = []\r\n\r\nfor (let key in name) {\r\n    criptoArray.push(key)//guarda el valor de las variables dentro el objeto \"name\" en criptoArray\r\n}\r\n","import axios from 'axios'\r\nimport { criptoArray } from '../components/Utils'\r\n\r\nexport const GET_CRIPTO = 'GET_CRIPTO'\r\nexport const GET_DATA_CRIPTO = 'GET_DATA_CRIPTO'\r\nexport const SELECT_CRIPTO = 'SELECT_CRIPTO'\r\n\r\n\r\nexport const getCripto = (cripto = criptoArray) => dispatch => {//cuando no recibe parametro ejecuta la funcion con \"criptoArray\"\r\n    let URL = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${cripto.join(',')}&tsyms=USD`//guarda la URL en una variable y transforma en String lo que recibe por variable.\r\n    axios.get(URL)\r\n        .then(res => {\r\n            dispatch({ type: 'GET_CRIPTO', payload: res.data.DISPLAY })\r\n        }).catch(err => {\r\n            dispatch({ type: 'GET_CRIPTO', payload: err.res })\r\n        })\r\n}\r\n\r\nexport const getDataCripto = (cripto) => dispatch => {\r\n    let URLDate = `https://min-api.cryptocompare.com/data/v2/histoday?fsym=${cripto}&tsym=USD&limit=360`\r\n    axios.get(URLDate)\r\n        .then(res => {\r\n            dispatch({ type: 'GET_DATA_CRIPTO', payload: res.data.Data.Data })\r\n        }).catch(err => {\r\n            dispatch({ type: 'GET_DATA_CRIPTO', payload: err.res })\r\n        })\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getDataCripto } from '../store/action'\r\n\r\nconst position = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: \"auto\"\r\n}\r\n\r\nfunction Chart({criptoName, timeSelect}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const dataCriptoDetail = useSelector(state => state.dataCriptoDetail)\r\n\r\n    const data = {\r\n        labels: [''],\r\n        datasets: [\r\n            {\r\n                label: criptoName,\r\n                data: [],\r\n                borderColor: [\"#6b82aa\"],\r\n                backgroundColor: [\"#cfd2d6\"],\r\n            }\r\n        ]\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: false,\r\n            text: criptoName\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataCripto(criptoName))\r\n    }, [criptoName, dispatch]);\r\n    \r\n\r\n    if (dataCriptoDetail && dataCriptoDetail[0]) {\r\n        for (let i = timeSelect; i >= 0; i--) {\r\n            data.labels.push(moment().subtract(i, 'days').calendar(1))\r\n            data.datasets[0].data.push(dataCriptoDetail[360 - i].close)\r\n        }\r\n    }\r\n\r\n    return (\r\n        (!dataCriptoDetail)?(\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border m-5\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        ):(<div className='row' style={position} >\r\n            <div className='col-md-12' >\r\n                <Line data={data} options={options} />\r\n            </div>\r\n        </div>)\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport { criptoArray, name } from './Utils'\r\n\r\nconst position = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n}\r\nconst color = {\r\n    backgroundColor:\"#cfd2d6\",\r\n    borderColor: \"#b1b1ff\",\r\n}\r\nconst colortext = {\r\n    color:\"#666666\"\r\n}\r\n\r\nfunction ChartSelector({submitTime, submitCripto}) {\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead className=\"table\">\r\n                    <tr>\r\n                        <th  style = {position} scope=\"col\">\r\n                            \r\n                            <select style={color} onChange={e => submitCripto(e.target.value)} >\r\n                                {criptoArray[0] && criptoArray.map(cripto => <option key={cripto} \r\n                                value={cripto} >\r\n                                    {name[cripto]}\r\n                                </option>\r\n                                )}\r\n                            </select>\r\n                            <label style = {colortext}>\r\n                                Evolucion en USD\r\n                            </label>\r\n                            <select style={color} onChange={e=>submitTime(e.target.value)}>\r\n                                <option value={360} >Anual</option>\r\n                                <option value={90} >Trimestal</option>\r\n                                <option value={30} >Mensual</option>\r\n                                <option value={7} >Semanal</option>\r\n                            </select>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ChartSelector;","import React, { useState } from 'react';\r\nimport Nav from './Nav';\r\nimport Chart from './Chart'\r\nimport ChartSelector from './ChartSelector'\r\n\r\nfunction Charts() {\r\n\r\n    let timeSelected = 120\r\n\r\n    const [cripto, setCripto] = useState('BTC');\r\n    const [time, setTime] = useState(timeSelected);\r\n\r\n    return (\r\n        <div >\r\n            <Nav />\r\n            <ChartSelector submitCripto={setCripto} submitTime={setTime} />\r\n            <div style={{ display: 'flex', justifyContent: 'space-around', flexDirection: 'column'}}>\r\n                <div >\r\n                    <Chart criptoName={cripto} timeSelect={time} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Charts;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst background = {\r\n    backgroundImage: `url('http://blogs.elpais.com/.a/6a00d8341bfb1653ef01b8d285b95f970c-pi')`,\r\n    height: '100vh'\r\n}\r\nconst backgroundfx = {\r\n    backgroundColor: 'rgba(0,0,0,0.7)'\r\n}\r\n\r\nfunction HeaderStart() {\r\n    return (\r\n        <div >\r\n            <div className=\"p-5 text-center bg-image\"  style={background} >\r\n                <div className=\"mask\"  style={backgroundfx}>\r\n                    <div className=\"d-flex justify-content-center align-items-center h-100\" >\r\n                        <div className=\"text-white\">\r\n                            <h1 className=\"mb-3\"  >CriptoApp</h1>\r\n                            <h4 className=\"mb-3\" >Cotizaciones en tiempo real</h4>\r\n                            <Link to='/my-cripto-app/Home'>\r\n                            <button className=\"btn btn-outline-light btn-lg\" >Entrar</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderStart;","import React from 'react';\r\nimport HeaderStart from './HeaderStart';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <HeaderStart />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Tr, Th, Td } from 'react-super-responsive-table'\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\n\r\nfunction Row({ cripto, name, nameCripto}) {\r\n    return (\r\n        <Tr >\r\n            <Th scope=\"row\">{cripto.FROMSYMBOL}</Th>\r\n            <Td>\r\n                <Link to={{pathname: \"/my-cripto-app/Chart\", aboutProps: {nCripto: {nameCripto, name}}}} >\r\n                    {name}\r\n                </Link>\r\n            </Td>\r\n            <Td>\r\n                {cripto.PRICE}\r\n            </Td>\r\n            <Td>\r\n                {cripto.OPENDAY}\r\n            </Td>\r\n            <Td>\r\n                {cripto.HIGH24HOUR}\r\n            </Td>\r\n            <Td>\r\n                {cripto.LOW24HOUR}\r\n            </Td>\r\n            <Td>\r\n                {cripto.MKTCAP}\r\n            </Td>\r\n            <Td>\r\n                {cripto.CHANGE24HOUR}\r\n            </Td>\r\n        </Tr>\r\n    );\r\n}\r\n\r\nexport default Row;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCripto } from '../store/action'\r\nimport Row from './Row'\r\nimport { criptoArray, name } from './Utils'\r\nimport { Table, Thead, Tbody, Tr, Th } from 'react-super-responsive-table'\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\n\r\nfunction List() {\r\n\r\n    const dispatch = useDispatch()\r\n    const dataCripto = useSelector(state => state.criptoDetail)\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => dispatch(getCripto()), 2500);\r\n        return () => clearInterval(interval);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {(!dataCripto) ? (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"spinner-border m-5\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ):((dataCripto && !dataCripto[criptoArray[0]]) ? (\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"spinner-border m-5\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                ):(\r\n                    <Table className=\"table\" style={{ border: \"2px solid grey\" }}>\r\n                        <Thead className=\"table\">\r\n                            <Tr>\r\n                                <Th scope=\"col\">Simbol</Th>\r\n                                <Th scope=\"col\">Coin</Th>\r\n                                <Th scope=\"col\">Price</Th>\r\n                                <Th scope=\"col\">Openday</Th>\r\n                                <Th scope=\"col\">High 24 hour</Th>\r\n                                <Th scope=\"col\">Low 24 hour</Th>\r\n                                <Th scope=\"col\">Mkt. Cap.</Th>\r\n                                <Th scope=\"col\">Chg.24H</Th>\r\n                            </Tr>\r\n                        </Thead>\r\n                        <Tbody >\r\n                            {dataCripto && dataCripto[criptoArray[0]] && criptoArray.map(cripto => (\r\n                                <Row key={cripto} name={name[cripto]} cripto={dataCripto[cripto].USD} nameCripto={cripto} />))}\r\n                        </Tbody>\r\n                    </Table>))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default (List)","import React from 'react';\r\nimport List from './List';\r\nimport Nav from './Nav'\r\n\r\nfunction CriptoTable() {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Nav />\r\n                <List/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CriptoTable;","import React, { useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2'\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getDataCripto } from '../store/action'\r\n\r\nconst position = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: \"auto\"\r\n}\r\n\r\n\r\nfunction Chart2({criptoName, timeSelect }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const dataCriptoDetail = useSelector(state => state.dataCriptoDetail)\r\n\r\n    const data = {\r\n        labels: [''],\r\n        datasets: [\r\n            {\r\n                label: criptoName,\r\n                data: [],\r\n                borderColor: [\"#6b82aa\"],\r\n                backgroundColor: [\"#cfd2d6\"],\r\n            }\r\n        ]\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: false,\r\n            text: criptoName\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataCripto(criptoName))\r\n    }, [criptoName, dispatch]);\r\n    \r\n\r\n    if (dataCriptoDetail && dataCriptoDetail[0]) {\r\n        for (let i = timeSelect; i >= 0; i--) {\r\n            data.labels.push(moment().subtract(i, 'days').calendar(1))\r\n            data.datasets[0].data.push(dataCriptoDetail[360 - i].close)\r\n        }\r\n    }\r\n\r\n    return (\r\n        (!dataCriptoDetail)?(\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border m-5\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        ):(<div className='row' style={position}>\r\n            <div className='col-md-12'>\r\n                <Line data={data} options={options} />\r\n            </div>\r\n        </div>)\r\n    );\r\n}\r\n\r\nexport default Chart2;","import React from 'react';\r\n\r\nconst position = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n}\r\nconst color = {\r\n    backgroundColor:\"#cfd2d6\",\r\n    borderColor: \"#b1b1ff\"\r\n}\r\nconst colortext = {\r\n    color:\"#666666\"\r\n}\r\n\r\nfunction ChartSelector2({submitTime, nameName}) {\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead className=\"table\">\r\n                    <tr>\r\n                        <th  style = {position}scope=\"col\">\r\n                            \r\n                            <button style={color}>\r\n                                {nameName}\r\n                            </button>\r\n                            <label style = {colortext}>\r\n                                Evolucion en USD\r\n                            </label>\r\n                            <select style={color} onChange={e=>submitTime(e.target.value)}>\r\n                                <option value={360} >Anual</option>\r\n                                <option value={90} >Trimestal</option>\r\n                                <option value={30} >Mensual</option>\r\n                                <option value={7} >Semanal</option>\r\n                            </select>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ChartSelector2;","import React, { useState } from 'react';\r\nimport Nav from './Nav';\r\nimport Chart2 from './Chart2'\r\nimport ChartSelector2 from './ChartSelector2'\r\n\r\nfunction SpecificChart({location}) {\r\n\r\n    let timeSelected = 120\r\n    let criptoName = \"BTC\"\r\n    let nameCriptoName = 'Bitcoin'\r\n\r\n    if (location.aboutProps !== undefined) {\r\n        if (location.aboutProps.nCripto !== undefined) {\r\n            criptoName = (location.aboutProps.nCripto.nameCripto)\r\n        }\r\n    }\r\n    if (location.aboutProps !== undefined) {\r\n        if (location.aboutProps.nCripto !== undefined) {\r\n            nameCriptoName = (location.aboutProps.nCripto.name)\r\n        }\r\n    }\r\n\r\n    const [cripto] = useState(criptoName);\r\n    const [time, setTime] = useState(timeSelected);\r\n\r\n    return (\r\n        <div >\r\n            <Nav />\r\n            <ChartSelector2 submitTime={setTime} nameName={nameCriptoName}/>\r\n            <div style={{ display: 'flex', justifyContent: 'space-around', flexDirection: 'column'}}>\r\n                <div >\r\n                    <Chart2 criptoName={cripto} timeSelect={time} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpecificChart;","import React from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport Charts from './components/Charts';\nimport Home from './components/Home';\nimport CriptoTable from './components/CriptoTable';\nimport SpecificChart from './components/SpecificChart'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Route exact path='/my-crypto-app/' component={Home} />\n      <Route path='/my-crypto-app/Home' component={CriptoTable} />\n      <Route path='/my-crypto-app/Charts' component={Charts} />\n      <Route path='/my-crypto-app/Chart' component={SpecificChart} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_CRIPTO, GET_DATA_CRIPTO } from './action'\r\n\r\n\r\nconst initialState = {//envia el objeto como estado inicial\r\n  criptoDetail: {},\r\n  dataCriptoDetail: []\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CRIPTO:\r\n      return {\r\n        criptoDetail: action.payload//guarda lo que recibe del payload en criptoDetail\r\n      }\r\n    case GET_DATA_CRIPTO:\r\n      return {\r\n        dataCriptoDetail: action.payload\r\n      }    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}